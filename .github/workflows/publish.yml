name: Publish
on:
  workflow_dispatch:
    inputs:
      release_as_beta:
        description: "Mark as pre-release"
        required: true
        type: boolean
        default: true
      publish_github:
        description: "Publish to GitHub"
        required: true
        type: boolean
        default: true
      publish_modrinth:
        description: "Publish to Modrinth"
        required: true
        type: boolean
        default: true
      publish_cf:
        description: "Publish to Curseforge"
        required: true
        type: boolean
        default: true
permissions:
  contents: write
  packages: write

jobs:
  prepare-release:
    name: üì• Prepare Release Data
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4.1.3
        with:
          name: Artifacts
          path: compiledmods/

      - name: Set outputs from Build workflow
        id: set_build_outputs
        run: |
          # Access outputs from the completed workflow run
          # Ensure these match the output names set in build.yml
          MOD_NAME="${{ github.event.workflow_run.outputs.mod_name }}"
          MOD_VERSION="${{ github.event.workflow_run.outputs.mod_version }}"
          MC_VERSION="${{ github.event.workflow_run.outputs.mc_version }}"
          
          echo "mod_name=$MOD_NAME" >> $GITHUB_OUTPUT
          echo "mod_version=$MOD_VERSION" >> $GITHUB_OUTPUT
          echo "mc_version=$MC_VERSION" >> $GITHUB_OUTPUT

  publish-github:
    name: üêô Publish to GitHub
    runs-on: ubuntu-latest
    if: inputs.publish_github
    needs: prepare-release
    steps:
      - name: Use artifacts and variables from prepare-release
        run: |
          # The downloaded artifacts are already in 'compiledmods/' from the prepare-release job
          # Access the outputs from the prepare-release job
          MOD_NAME="${{ needs.prepare-release.outputs.mod_name }}"
          MOD_VERSION="${{ needs.prepare-release.outputs.mod_version }}"
          MC_VERSION="${{ needs.prepare-release.outputs.mc_version }}"
          echo "Mod Name: $MOD_NAME"
          echo "Mod Version: $MOD_VERSION"
          echo "MC Version: $MC_VERSION"
          ls -R compiledmods/ # Verify artifacts are present
      - name: Publish
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          files: |
            compiledmods/${{ needs.prepare-release.outputs.mod_name }}-${{ needs.prepare-release.outputs.mod_version }}-common.jar
            compiledmods/${{ needs.prepare-release.outputs.mod_name }}-${{ needs.prepare-release.outputs.mod_version }}-fabric.jar
            compiledmods/${{ needs.prepare-release.outputs.mod_name }}-${{ needs.prepare-release.outputs.mod_version }}-neoforge.jar
          github-tag: "v${{ needs.prepare-release.outputs.mod_version }}"
          name: "v${{ needs.prepare-release.outputs.mod_version }}"
          version: "v${{ needs.prepare-release.outputs.mod_version }}"
          version-type: release
          changelog-file: CHANGELOG.md
        env:
          mod_name: ${{ needs.prepare-release.outputs.mod_name }}
          mc_version: ${{ needs.prepare-release.outputs.mc_version }}
          mod_version: ${{ needs.prepare-release.outputs.mod_version }}

  publish-modrinth:
    name: üü¢ Publish to Modrinth
    runs-on: ubuntu-latest
    if: inputs.publish_modrinth && contains('macuguita', github.triggering_actor)
    needs: prepare-release
    steps:
      - name: Use artifacts and variables from prepare-release
        run: |
          MOD_NAME="${{ needs.prepare-release.outputs.mod_name }}"
          MOD_VERSION="${{ needs.prepare-release.outputs.mod_version }}"
          MC_VERSION="${{ needs.prepare-release.outputs.mc_version }}"
          echo "Mod Name: $MOD_NAME"
          echo "Mod Version: $MOD_VERSION"
          echo "MC Version: $MC_VERSION"
          ls -R compiledmods/

      - name: Publish for Fabric
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: 7vxePowz
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          files: |
            compiledmods/${{ needs.prepare-release.outputs.mod_name }}-${{ needs.prepare-release.outputs.mod_version }}-fabric.jar
          name: "guita's Woodworks ${{ needs.prepare-release.outputs.mod_version }}-fabric"
          version: "${{ needs.prepare-release.outputs.mod_version }}-fabric"
          version-type: release # Set to 'release' or handle conditional logic for 'beta'
          changelog-file: CHANGELOG.md
          loaders: |
            fabric
            quilt
          game-versions: ${{ needs.prepare-release.outputs.mc_version }}
          dependencies: |
            fabric-api@(required){modrinth:P7dR8mSH}
            macu-lib@(required){modrinth:XnLNz8og}
        env:
          mod_name: ${{ needs.prepare-release.outputs.mod_name }}
          mc_version: ${{ needs.prepare-release.outputs.mc_version }}
          mod_version: ${{ needs.prepare-release.outputs.mod_version }}

      - name: Publish for NeoForge
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          modrinth-id: 7vxePowz
          modrinth-token: ${{ secrets.MODRINTH_TOKEN }}
          files: |
            compiledmods/${{ needs.prepare-release.outputs.mod_name }}-${{ needs.prepare-release.outputs.mod_version }}-neoforge.jar # Corrected from forge to neoforge
          name: "guita's Woodworks ${{ needs.prepare-release.outputs.mod_version }}-neoforge"
          version: "${{ needs.prepare-release.outputs.mod_version }}-neoforge"
          version-type: release # Set to 'release' or handle conditional logic for 'beta'
          changelog-file: CHANGELOG.md
          loaders: neoforge # Corrected from forge to neoforge
          game-versions: ${{ needs.prepare-release.outputs.mc_version }}
          dependencies: |
            macu-lib@(required){modrinth:XnLNz8og}
        env:
          mod_name: ${{ needs.prepare-release.outputs.mod_name }}
          mc_version: ${{ needs.prepare-release.outputs.mc_version }}
          mod_version: ${{ needs.prepare-release.outputs.mod_version }}

  publish-cf:
    name: üî∂ Publish to Curseforge
    runs-on: ubuntu-latest
    if: inputs.publish_cf && contains('macuguita', github.triggering_actor)
    needs: prepare-release
    steps:
      - name: Use artifacts and variables from prepare-release
        run: |
          MOD_NAME="${{ needs.prepare-release.outputs.mod_name }}"
          MOD_VERSION="${{ needs.prepare-release.outputs.mod_version }}"
          MC_VERSION="${{ needs.prepare-release.outputs.mc_version }}"
          echo "Mod Name: $MOD_NAME"
          echo "Mod Version: $MOD_VERSION"
          echo "MC Version: $MC_VERSION"
          ls -R compiledmods/

      - name: Publish for Fabric
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          curseforge-id: 1308420
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}
          files: |
            compiledmods/${{ needs.prepare-release.outputs.mod_name }}-${{ needs.prepare-release.outputs.mod_version }}-fabric.jar
          name: "guita's Woodworks ${{ needs.prepare-release.outputs.mod_version }}-fabric"
          version: "${{ needs.prepare-release.outputs.mod_version }}-fabric"
          version-type: release # Set to 'release' or handle conditional logic for 'beta'
          changelog-file: CHANGELOG.md
          loaders: |
            fabric
            quilt
          game-versions: ${{ needs.prepare-release.outputs.mc_version }}
          dependencies: |
            fabric-api@(required){curseforge:306612}
            macu-lib@(required){curseforge:1216837}
          java: |
            21
        env:
          mod_name: ${{ needs.prepare-release.outputs.mod_name }}
          mc_version: ${{ needs.prepare-release.outputs.mc_version }}
          mod_version: ${{ needs.prepare-release.outputs.mod_version }}

      - name: Publish for NeoForge
        uses: Kir-Antipov/mc-publish@v3.3
        with:
          curseforge-id: 1308420
          curseforge-token: ${{ secrets.CURSEFORGE_TOKEN }}
          files: |
            compiledmods/${{ needs.prepare-release.outputs.mod_name }}-${{ needs.prepare-release.outputs.mod_version }}-neoforge.jar # Corrected from forge to neoforge
          name: "guita's Woodworks ${{ needs.prepare-release.outputs.mod_version }}-neoforge"
          version: "${{ needs.prepare-release.outputs.mod_version }}-neoforge"
          version-type: release # Set to 'release' or handle conditional logic for 'beta'
          changelog-file: CHANGELOG.md
          loaders: neoforge # Corrected from forge to neoforge
          game-versions: ${{ needs.prepare-release.outputs.mc_version }}
          dependencies: |
            macu-lib@(required){curseforge:1216837}
          java: |
            21
        env:
          mod_name: ${{ needs.prepare-release.outputs.mod_name }}
          mc_version: ${{ needs.prepare-release.outputs.mc_version }}
          mod_version: ${{ needs.prepare-release.outputs.mod_version }}
